
==================== FINAL INTERFACE ====================
2017-01-13 12:23:06.480025 UTC

interface main@main:Main 8001
  interface hash: 882b37f984f0d263a554e9535d48e64a
  ABI hash: 190ad963ad41540f4639c9e27eab4131
  export-list hash: 45a3e649100a68e086fafc8ba490018a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 75a00b3102c2cd1ea6df7ca4368540f8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Regression-0.1.0.0@Regression-0.1.0.0-8KgimJZiYjs9hASSzNeOg5
                      base-4.9.0.0* ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-8KgimJZiYjs9hASSzNeOg5:AppRunner e05f853ccf43bde8b82dfe83321f6390
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-8KgimJZiYjs9hASSzNeOg5:Matrix c42aa2be386c7d6004f690dbfc3233fd
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-8KgimJZiYjs9hASSzNeOg5:Regressions 13e5df431fb01d3b2165b32d23e083f8
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
0b61bf987c383b347c1deaf4f4b4e2e9
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a96ef53ece8cb245c5374cc8970de8ae
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case DataBuilder.getData1
                        Main.main6
                        AppRunner.parseCSV2
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case AppRunner.$wprepareFile
                        (case ipv3
                                `cast`
                              (DataBuilder.N:DataContainer[0]) of ww { (,) ww1 ww2 ->
                         case DataBuilder.$wfilterDataContainer
                                (GHC.Types.[] @ GHC.Types.Int)
                                ww1
                                ww2 of ww3 { (#,#) ww4 ww5 ->
                         (ww4, ww5) `cast` (Sym (DataBuilder.N:NumContainer[0])) } })
                        (GHC.Types.[] @ GHC.Types.Int)
                        Main.main5
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv5 of ww { (,) ww1 ww2 ->
                 case Regressions.gradientDescent1
                        ww2
                        Main.main4
                        Main.main3
                        Main.main2
                        (GHC.Types.[]
                           @ (Regressions.NormalizeConst, Regressions.VariableInd))
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case ipv7 of ww3 { (,) ww4 ww5 ->
                    AppRunner.$w$cshow ww4 ww5 ww1 ww2 })
                   GHC.Types.True
                   ipv6 } } } } }) -}
e4e7194ad0ea7bdaa9c49a43d69be9b8
  main2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10000000#) -}
823f7288ac4f7ff5c7e50ae4daeb4667
  main3 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0e-2##) -}
2a46e201534067999c58d1561075d289
  main4 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0e-5##) -}
61b5993d6df2382345f97697e69c5354
  main5 :: AppRunner.YColumnIndex
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Int
                        (GHC.Types.[] @ GHC.Types.Int)
                        0# of ww2 { DEFAULT ->
                 GHC.Types.I# (GHC.Prim.-# 2# ww2) }) -}
07e7fedc5139807ce7ed37d78caddc75
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "examples/kwadraty.csv"#) -}
9ab41425d3a4a3c0c246432afa1d805e
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

