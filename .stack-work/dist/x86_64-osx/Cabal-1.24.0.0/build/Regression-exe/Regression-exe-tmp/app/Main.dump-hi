
==================== FINAL INTERFACE ====================
2017-01-03 11:16:12.6608 UTC

interface main@main:Main 8001
  interface hash: 3729192312ff531a915846f764e47815
  ABI hash: 72dd8eb8ca44824e265a311c7e5d7cac
  export-list hash: 05656ebaaaa6ed17dad1f17917fbae09
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 75a00b3102c2cd1ea6df7ca4368540f8
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Regression-0.1.0.0@Regression-0.1.0.0-BgfkxP9qOsG1ta2nZqj6mX
                      base-4.9.0.0* ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-BgfkxP9qOsG1ta2nZqj6mX:DataBuilder 8fe0c469a6c1ae72961e0b6320befff0
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-BgfkxP9qOsG1ta2nZqj6mX:Lib 7571d3af02cd59d821c460a13af6ce22
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-BgfkxP9qOsG1ta2nZqj6mX:Matrix 2f18615bb81ce0b3a295f7f10fd630e9
import  -/  Regression-0.1.0.0@Regression-0.1.0.0-BgfkxP9qOsG1ta2nZqj6mX:Regressions eb2e181c63d8c027033b7e88f6bf26e0
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
2d964612257adf6cb409b556e95d9abc
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
3fa7dbf881ee8a4b84f70cfeda7648a4
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DataBuilder.getData1
                        Main.main5
                        Main.main4
                        s of ds1 { (#,#) ipv ipv1 ->
                 let {
                   freeterm :: Regressions.XYContainer
                   = case ipv1
                            `cast`
                          (DataBuilder.N:DataContainer[0]) of ww { (,) ww1 ww2 ->
                     case DataBuilder.$wfilterDataContainer
                            (GHC.Types.[] @ GHC.Types.Int)
                            ww1
                            ww2 of ww3 { (#,#) ww4 ww5 ->
                     case Regressions.$wgetXYContainer
                            Main.main3
                            ww4
                            ww5 of ww7 { Unit# ww8 ->
                     case ww8 of ww9 { (,,,) ww10 ww11 ww12 ww6 ->
                     case Regressions.$wcreateNewFeatures
                            ww10
                            ww11
                            ww12
                            ww6 of ww13 { Unit# ww14 ->
                     case ww14 of ww15 { (,,,) ww16 ww17 ww18 ww19 ->
                     case Regressions.$waddFreeTerm
                            ww16
                            (Matrix.$wscaleLines
                               @ GHC.Types.Double
                               GHC.Float.$fFractionalDouble
                               GHC.Float.$fRealDouble
                               ww17)
                            (Matrix.$wscaleLines
                               @ GHC.Types.Double
                               GHC.Float.$fFractionalDouble
                               GHC.Float.$fRealDouble
                               ww18)
                            ww19 of ww20 { Unit# ww21 ->
                     Regressions.XYContainer ww21 } } } } } } }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Regressions.$fShowXYContainer_$cshow freeterm)
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case freeterm of ww { Regressions.XYContainer ww1 ->
                 case ww1 of ww2 { (,,,) ww3 ww4 ww5 ww6 ->
                 case ww6 of ww7 { GHC.Types.I# ww8 ->
                 case Regressions.$wgradientDescent
                        ww3
                        ww4
                        ww5
                        ww8
                        Main.main2
                        1.0##
                        0.1##
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Matrix.$fShowMatrix_$cshow
                      @ GHC.Types.Double
                      GHC.Float.$fShowDouble
                      ipv5)
                   GHC.Types.True
                   ipv4 } } } } } }) -}
bab7ac6bba4ef3415b1cde65416ce6bd
  main2 :: GHC.Types.Double
  {- HasNoCafRefs, Unfolding: (GHC.Types.D# 1.0e-3##) -}
5aff556a9b225ae8c261a83d4430ec44
  main3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
019c8f12857cd8fa2ca2828f7570d119
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ","#) -}
d5c96f1cfc696196228aeb3c1b233316
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "examples/exampledata.csv"#) -}
c78f75571c3b2d463f3c8f9dc87694f9
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

